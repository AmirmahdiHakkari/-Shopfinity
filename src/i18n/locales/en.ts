export const en = {
  pageTitle: {
    about: "about | Shopfinity",
    basket: "Basket | Shopfinity",
    checkout: "Checkout | Shopfinity",
    contact: "Contact | Shopfinity",
    "forgot-Password": "Forgot Password | Shopfinity",
    landing: "Landing | Shopfinity",
    login: "Login | Shopfinity",
    products: "Products | Shopfinity",
    "Not-Access": "Not Access | Shopfinity",
    notFound: "Not Found | Shopfinity",
    dashboard: {
      overview: "overview | dashboard",
      products: "products | dashboard",
      productEdit: "Edit Product | dashboard",
      productCreate: "Create Product | dashboard",
    },
  },
  landingPage: {
    header: "Welcome to Shopfinity",
    subheader: "Login and view products",
    loginButton: "Sign in",
    learnMoreButton: "Learn More",
  },
  navbar: {
    header: "Shopfinity",
    product: "Products",
    about: "About",
    contactUs: "Contact Us",
    login: "Login",
    logout: "Logout",
    pages: "Pages",
    languages: "Languages",
    dashboard: "Dashboard",
    toast: {
      loggedOut: "You are logged out",
    },
  },
  aboutPage: {
    header: "About This Project",
    description:
      "This project is built with modern web technologies to ensure speed,responsiveness, and maintainability. Below you can see the tools and technologies that made it possible.",
  },
  contactPage: {
    header: "Contact Us",
    email: "Email Us",
    call: "Call Us",
    visit: "Visit Us",
    follow: "Follow Us",
    form: {
      header: "Send Us a Message",
      namePlace: "Your Name",
      nameRequiredError: "Name is required",
      nameMinLengthError: "Name must be at least 3 characters",
      nameMaxLengthError: "The name must be a maximum of 15 characters.",
      emailPlace: "Email Address",
      emailRequiredError: "Email is required",
      emailInvalidError: "Invalid email address",
      subjectPlace: "Subject",
      subjectRequiredError: "Subject is required",
      subjectMinLengthError: "Subject must be at least 3 characters",
      subjectMaxLengthError: "The Subject must be a maximum of 15 characters.",
      messagePlace: "Your Message",
      messageRequiredError: "Message is required",
      messageMinLengthError: "Message must be at least 5 characters",
      sending: "Sending...",
      send: "Send Message",
    },
  },
  forgotPassPage: {
    header: "Forgot Password",
    form: {
      submit: "âœ… reset link has been sent.",
      emailPlace: "Enter your email",
      emailRequiredError: "Email is required",
      emailInvalidError: "Invalid email address",
      sending: "Sending...",
      send: "Send Reset Link",
      timer: "Back to login page in ",
      back: "Back to Login",
    },
  },
  loginPage: {
    header: "Sign in to your account",
    form: {
      usernamePlace: "Username",
      usernameRequiredError: "username is required",
      usernameMinLengthError: "The username must be more than 3 characters.",
      usernameMaxLengthError: "The username must be less than 15 characters.",
      passwordPlace: "Password",
      passwordRequiredError: "Password is required",
      passwordMinLengthError: "The Password must be more than 3 characters.",
      passwordMaxLengthError: "The Password must be less than 15 characters.",
      forgotPassword: "Forgot password?",
      loading: "Loading...",
      login: "Login",
      demo: {
        header: "Demo userName and password",
        userName:"userName : ",
        password:"password : "
      },
      toast: {
        loggedIn: "You are logged in",
      },
    },
  },
  productsPage: {
    filter: {
      all: "all",
      beauty: "beauty",
      fragrances: "fragrances",
      furniture: "furniture",
      groceries: "groceries",
    },
    addToCart: "ðŸ›’ Add to Cart",
  },
  basketPage: {
    sidebar: {
      header: "Cart",
      checkout: "Checkout",
      total: "Total : ",
    },
    empty: {
      header: "Your shopping cart is empty ",
      subheader: "Go to the store and add your favorite products",
    },
  },
  checkoutPage: {
    orderSummary: "order summary",
    orderRegistration: "order registration",
    form: {
      header: "User information",
      name: "Name and surname",
      nameRequiredError: "Name is required",
      nameMinLengthError: "Name must be at least 3 characters",
      nameMaxLengthError: "The name must be a maximum of 25 characters",
      email: "email",
      emailRequiredError: "Email is required",
      emailInvalidError: "Invalid email address",
      address: "Address",
      addressRequiredError: "Address is required",
      addressMinLengthError: "Address must be at least 3 characters",
    },
  },
  notFoundPage: {
    header: "Page Not Found",
    description:
      "Sorry, the page you are looking for doesnâ€™t exist or has been moved.",
    goHome: "Back to Home",
  },
  dashboard: {
    toast: {
      languageChanged: "Language changed to {{lang}}",
    },
    sidebar: {
      header: "Dashboard",
      pages: {
        overview: "Overview",
        products: "Products",
        productEdit: "Edit product",
        createProduct: "Create product",
      },
    },
    months: {
      January: "January",
      February: "February",
      March: "March",
      April: "April",
      May: "May",
      June: "June",
      July: "July",
      August: "August",
      September: "September",
      October: "October",
      November: "November",
      December: "December",
    },
    summaryHeader: {
      revenues: "Total revenues",
      orders: "Total orders",
      customers: "Total customers",
    },
    saleByGender: {
      header: "Sale by gender",
      labels: {
        mens: "Mens",
        womens: "Womens",
        kids: "Kids",
        Total: "Total",
      },
    },
    websiteVisit: {
      header: "Website visits",
      team1: "Under 18",
      team2: "Above 18",
    },
    areaChart: {
      income: "income",
      expenses: "expenses",
    },
    product: {
      header: "Products",
      table: {
        addProduct: "Add Product",
        searchPlace: "Search by title or category...",
        noData: {
          header: "No products found",
          subheader: "Try another phrase or change filters",
        },
        header: {
          title: "Title",
          category: "Category",
          allCategories: "All categories",
          stock: "Stock",
          price: "Price",
          edit: "Edit",
          delate: "delate",
        },
        footer: {
          rowsPerPage: "Rows per page :",
          page: "Page ",
          of: "of ",
        },
      },
      toast: {
        deletedSuccessfully: "Deleted successfully",
      },
    },
    editProduct: {
      header: "Edit Product",
      productNotFound: "Product not found",
      form: {
        title: "Title",
        titleRequiredError: "Title is required",
        titleMinLengthError: "Title must be at least 3 characters",
        titleMaxLengthError: "Title must be a maximum of 35 characters",
        price: "Price ($)",
        priceRequiredError: "price is required",
        category: "Category",
        categoryRequiredError: "Category is required",
        categoryMinLengthError: "Category must be at least 3 characters",
        categoryMaxLengthError: "category must be a maximum of 15 characters",
        stock: "Stock",
        stockRequiredError: "Stock is required",
        description: "Description",
        descriptionRequiredError: "Description is required",
        descriptionMinLengthError: "Description must be at least 3 characters",
        saveChangesButton: "Save Changes",
        savingChangesButton: "Saving...",
        toast: {
          changesSaved: "Changes saved",
        },
      },
    },
    createProduct: {
      header: "Create Product",
      productNotFound: "Product not found",
      form: {
        title: "Title",
        titleRequiredError: "Title is required",
        titleMinLengthError: "Title must be at least 3 characters",
        titleMaxLengthError: "Title must be a maximum of 35 characters",
        price: "Price ($)",
        priceRequiredError: "price is required",
        category: "Category",
        categoryRequiredError: "Category is required",
        categoryMinLengthError: "Category must be at least 3 characters",
        categoryMaxLengthError: "category must be a maximum of 15 characters",
        stock: "Stock",
        stockRequiredError: "Stock is required",
        description: "Description",
        descriptionRequiredError: "Description is required",
        descriptionMinLengthError: "Description must be at least 3 characters",
        createButton: "create",
        creatingButtonButton: "creating...",
        toast: {
          changesSaved: "product created",
        },
      },
    },
  },
};
